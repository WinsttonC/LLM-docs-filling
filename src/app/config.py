import os

import streamlit as st
from dotenv import load_dotenv

load_dotenv()

doc_path = os.getenv("DOCUMENTS_PATH")


def description():
    img_path = f"{doc_path}/images"

    st.markdown("""
    ### Описание
    Данная система предназначена для автоматического заполнения документов 
    с использованием больших языковых моделей (LLM). \n
    **Основная цель системы** – упростить процесс создания и заполнения различных форм и документов, 
    таких как доверенности, договоры и другие юридические документы.
    В качестве основной модели при разработке использовался GigaChat Lite. 
    Приложение интегрируется с GigaChat API но не зависит от него. 
    При необходимости LLM может быть легко заменена на любую другую,
    включая open-source модели.

    ### Основные компоненты системы \n
    В общем виде система состоит из 3 основных компонентов:
    """)
    st.image(f"{img_path}/Общее описание системы.jpg")
    st.markdown("""
    ##### 1. Разметка пропусков в документе
    Система анализирует предоставленный документ и извлекает 
    типовые поля, такие как ФИО, дата, адрес и т.д. 
    Для этого используются регулярные выражения и LLM агенты. \n
    При необходимости пропуски можно легко заменить или отредактировать,
    так как повторное извлечение легко используется с помощью регулярных
    выражений.

    **Результат:** документ в исходном формате размеченными полями пропусков.
    """)
    st.image(f"{img_path}/Разметка пропусков.jpg")

    st.markdown("""
    ##### 2. Создание шаблона документа

    **Результат:** JSON-схема документа со следущими ключами:
    - Название документа
    - Описание документа 5-6 предложений с основной информацией
    - Поля (краткая характеристика каждого пропуска в документе)
        - Контекст (несколько слов до и после каждого поля)
        - Вопрос пользователю для уточнения данных по этому полю в контексте
    - Дата последнего обновления

    """)
    st.image(f"{img_path}/Создание шаблона с метаданными.jpg")

    st.markdown("""
    ##### 3. Заполнение документов данными пользователя

    **Результат:** заполненный данными пользователя документ в 
    исходном формате, готовый к подписи.
    """)
    st.image(f"{img_path}/Заполнение документа.jpg")

    st.markdown("### Общая архитектура системы")
    st.image(f"{img_path}/Общая архитектура.jpg")
    st.markdown("### Список агентов")

    st.markdown("""
    ### TO DO
    В этом блоке описаны потенциальные улучшения проекта, которые 
    могут повысить качество, скорость работы, стабильность 
    или удобство взаимодействия.
    - Можно ускорить создание шаблонов и разметку документов за счет параллельной обработки блоков.
    Распараллелить запросы можно только с платной подпиской на GigaChat или с использованием других API.

    - Обработка таблиц, картинок и нечитаемых pdf документов. Так как все алгоритмы рассчитаны на 
    обработку строк, нет ограничений на использование других форматов документа.
    """)
